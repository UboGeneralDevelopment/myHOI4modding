
スコープとか、コマンドとか、その辺の定義とかを読み解く。

editted from web browser


ガイド

ゲームファイルはいじくるな
よいエディタを使おう
バニラファイルの上書きは最小限に
よいマージツールを使おう？
バックアップしよう
txtファイルはUTF-8で書こう
ローカライズファイルymlにはUTF-8-BOMを使おう
インデントを使おう
#で始まるコメント行を用いよう
デバッグモードをつかってデバッグをがんばろう

マイナーMODとメジャーMOD
メジャーMODにおいては、MODデータやセーブデータが混じらないようパスを好感してしまうこともあるので注意。

MODでの処理
ゲームの動きを構成する重要な要素は、以下のものに分類される。
スコープと対象
エフェクト（コマンド）
モディファー
トリガー

これらに加え、その効果を補強するものとして以下の要素がある。
定義
ローカライズ
変数

実際には上記の要素を組み合わせて、MODの実態を構成する。代表的なものには
AI　ブックマーク　建物　コスメティックタグ　国　師団　ディシジョン　装備　イベント　アイデア　イデオロギー　国家方針　資源　技術
などがある。

まずMOD要素について

スコープ
なんらかの操作を行う対象、あるいは範囲を指定する。
スコープは基本的にはゲーム中で選択されている対象であり、国家、ステート、リーダーなどである。
MODで行われる操作は基本的には選択されたスコープ中で実行される。
しかし操作を行う対象を任意に選びたい時は、MOD中でスコープを指定することができる。
指定可能なスコープは各国や各ステートなどで、詳しくはwikiに記載されているほか、動的な国家スコープとしてROOT、FROM、PREVがある。。
また、各スコープ内には数多くの変数が設定されており、これは変数やコマンドによって指定したり、変化させる。
とはいえ、実際には効果範囲がどうなっているのかは逐次検証が必要である。
基本的な記法は SCOPE = {}　で、この中でいろいろ操作が行われる。

コマンド
何らかの効果を実行させる。あるスコープにおいて条件が満たされると実行され、指定されたスコープに対して影響を与える。
指定したスコープの何かの変数を変更させることが主な働き。基本的には効果範囲、実行条件、実行内容を記載する必要がある。
使われ方は様々。通常はトリガーなどによって発動する。


モディファー
あるスコープの中のある変数に対して効果を及ぼす点ではエフェクトに似るが、アイデアなどの実体に紐づけられているか、それ自体が実体を持つ。
モディファーはディシジョン、国家精神、国家方針などに結びついており、コマンドで直接いじることは基本的にできない。
モディファーはそれ自体の効果の情報を保存しており、効果を修正したりすることができる。モディファーの存在する変数は変更履歴が残るということだ。
コマンドによる効果は基本的に効果を記憶していないため、変数の基礎値を直接変更するものだといえる。
モディファーの種類もいっぱいあるが、情報が散逸しており、wikiのmodifierの項目以外にもある。

トリガー
コマンドやモディファーが適用される条件を指定する。イベントや国家方針、ディシジョンなどのゲーム内システムとして多くが実装されている。
wikiに書いてないトリガーとしてon_actionがある。
このうち、on_startupは効果適用が初期開始にかぎられるため、ここで効果がある場合は基本的にMODを途中導入できない。

以上が基本的な構成要素である。
これらの働きをサポートするために、以下の要素が用意されている。

変数
２つの重要な変数がある。ゲーム内変数とMOD定義変数だ。
ゲーム内変数は参照することのみができるもので、各スコープごとに多くの種類が設定されている。
トリガーもゲーム内変数として扱うことができ、 ゲーム内変数の種類はwikiのvariablesとconditionsに書かれている。
MOD定義変数は好きな数字や文字を格納でき、指定したスコープに実装され、記憶される。
MOD定義変数を操作するためには条件を指定し、コマンドを指定する必要がある。変数操作はコマンドの一種と考えることもできる。 

定義
定義された数字を格納している。国に共通することなど、繰り返し用いられる数字などが定義づけられている。

ローカライズ
言語を変えて表示したいときに、置き換える部分をこれで置き換える。

などと色々書いたが、プログラミング感覚だと少しちがう。
ゲーム中のオブジェクトの書き方にはそれぞれ暗黙の形式があり、それに則って書かなければならない。
基本的には元ファイルにある書き方がただしく、それにならうということ。
とはいえ、異なる欠き方でも機能することもあるため、そのあたりの法則性は考えなければならない
また、ウィキの内容もすべてではなく、一番いいのは役に立ちそうなMODをダウンロードして調べることである。


modの案
###砲撃、パンツァーカイルなどの能力MOD
ドクトリン研究によってアンロックされる。
準備砲撃　計画が必要。砲兵師団の防御、攻撃up、砲兵を消費
戦車攻撃?　平地での速度および攻撃up、戦車師団の攻撃防御up
戦闘修正メモ
add temporaly buffもしくはunit_modifierをもちいる
特定師団タイプに影響する効果は、師団タイプにより、構成大隊によらない
防御力は突破と防御双方に適用される。攻撃もハード、ソフト双方に適用。
地形別に効果を与えることはでき、師団タイプごとに効果も与えられるが、装備には影響できない。
効果を検証中
num_infantry
num_artillery などは師団の数を数える。重複して数えることもある。


###民間工場資源消費mod

国内資源から装備の資源消費を引き、あまりの資源が民間に供給されていると仮定し、国内民間工業の数とあまり資源の量に応じて効率を減らす。
全体の出力修正を資源修正とその他修正に分け、国内工場のみ出力に資源修正をかける。
再計算および修正の実行を行うタイミングをどうするか？　毎日出力修正はon_dailyで再計算し、ディシジョンか国民精神によって継続的にモディファーを与える。
民間工場の数に応じて必要資源量を各資源について計算、最低限度充足している資源割合が最終的な建設速度に影響する。
消費財消費量、スペシャルプロジェクトコストも増やしたいが、検討課題。消費財については何とかなりそう。スペシャルプロジェクトコストは厳しそう。
資源あまりも計算しておく。
国ごとの民間資源消費の違いは国民精神か政治顧問にて表現する。最終的にはダイナミックに表現したい。

使えそうなゲーム内パラメタ
resource@steel resource@alminium resource@...　余剰の資源量を示す。輸入分も含む。反映は少し遅れる
resource_consumed 消費資源量
resource_exported 輸出資源量。実際の輸出量ではなく、法律によるもの
resource_imported 資源輸入量
resource_produced 資源国内生産量

num_of_available_civilian_factories 完全に余っている工場
num_of_available_military_factories　
num_of_available_naval_factories　
num_of_civilian_factories　輸出、従属国による増加含む保有している工場から輸出した分を引いた数。
num_of_civilian_factories_available_for_projects　建設に使用可能な工場数
num_of_controlled_states
num_of_factories　保有している全工場数 include imported and donated factories
num_of_military_factories
num_of_naval_factories
<buildings> arms factory,industrial complex, などで、国内の建築物の総量がわかる

modifier@...でモディファー内容を参照可能。また、この値は直接的に変更可能
production_speed_buildings_factor　建設速度全体へのボーナス。合計の値が最終的な値。
consumer_goods_factor　消費財の割合。モディファーの合計が最終的な値。税金にたとえることができる。
production_oil_factor　石油のみに適用される生産ボーナス。
min_export


ゲーム内の建設速度ファクターはそれはそれとしてほっておく。国ごとの最低建設速度とみよう。

開発順。

まず、ゲーム内変数を表示する。　クリア






