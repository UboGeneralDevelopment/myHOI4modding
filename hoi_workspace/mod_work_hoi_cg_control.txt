
消費財を完全手動操作が可能となる。
でも安定度が下がる。


スクリプトロードマップ

##################システム実装#######################

#scripted_guis
プレイヤーによるシステム動作確認：すべて完了
aiによる動作確認：すべて完了

#ideas
スクリプト内容の記述ミスの確認：ほぼすべて完了

#on_actions
消費財需給及び安定度変化システムの動作確認：完了
初期設定イベントの発動確認；完了

#events
初期設定イベントの動作確認：完了

#そのほか特記事項
初期設定イベントの途中動作は未検証

システム作業終了

###############################################


#############インターフェイス作業####################

#scripted_gui
アクセスボタンの再構築。

UIデザイン：
 base goods needs, base goods supply, goods balance, daily stability change, effective consumer goods
　基礎需要(ツールチップで原因説明)、基礎供給、消費財バランス、安定度効果（ツールチップで増減値決定の説明）実消費財供給、
UIスクリプト：
グラフィック実装：
固定文字表記：
数字の色変え表記：
ボタンのツールチップ、コストと効果の表記：

#ツールチップ
consumer_goods_supplyの国家方針において、custom_effect_tooltipでのstability_effectの効果を表記したい。
economy_lawでの需要変化もツールチップに表記

まずは十分な情報を書く。つまりツールチップを完成させる。
その後、形の成型に入る。




###########追加計画######################

時間による効果を追加する。
scripted_effects
と
on_daily

cg_supplyとexhaustion levelを参照して、毎日のexhaustion増加量を決定する。
疲労度増加の目安としては、36年から部分動員して39年から戦争経済で43年はじめに総動員をやって3年で崩壊するぐらい。
20％引きを3年やって80%落ちるくらい。
今だと20%で-1.6なので１年間で80％。ちょっと大きすぎる。
ちなみにプラス効果は5%で一年間で10%
やっぱり最低の変化量は週0.1スタートにしよう。


intefaceには

scripted gui
レベル変更の前に時間チェックを行う

scripted effects
レベルによる効果変更：疲労度を検証してスイッチング。
疲労度による効果変更：疲労度に応じて疲労度を追加。
毎日疲労度増減効果

を追加する。
それまでの消費財削減効果量＊削減時間量を評価値として、経済疲労度を追加する。
疲労度が高いと、より高いレベルの消費財に置き換わる。



ideas
安定度マイナス効果について変更する。

5%ずつ削減し(アイデア10個)、週の安定度が
-0.2,-0.3,-0.4,-0.5,-0.6,-0.7,-0.8,（アイデア70個）変化するようにする。

civilian exhaustionを追加し、7段階レベルで変化する


