加筆中

新しいinterfaceを追加するならば必須の要素。
interfaceのgfxとguiを書き換える必要がある


###################GUI#############################

GFXをつかってinterfaceを設計するファイル
containerとelementに分かれる。

あたらしいcontainerはTechtreeもしくはScripted_GUIでのみ追加することができる。
つまりあたらしいGUIを導入するには必ずScriptedGUIを書く必要がある。
設計の上で重要なのは、位置、サイズ、重なる順番である。

重なる順番はcontainerの内部の上から下に向けて順番に上に出てくる。
既存のインターフェイスより常に前に出したければ、click_to_frontとかく。
右上を中心に

基本的にinterfaceはcontainerでグループ化されている。

#典型的なcontainerWindowType解説
name　#containerの名前
size　＃containerサイズ設定。内部elementはここから出られない。
fullscreen　＃書いてある通り
position　＃ウィンドウの左上端の座標。右向きがx、下向きがy
orientation　＃座標の(0,0)基準置が親containerのどこにあるか、四隅と真ん中が指定可能
click_to_front = yes　＃推すと前にでてくるかどうか。
clipping　＃内部エレメントをcontainer外には絶対に出さないようにするかどうか
moveable　＃いどうできるかどうか
background　#コンテナの背景に用いるファイルを指定する。

アニメーション要素はとりあえずwiki参照。

containerWindowTypeは階層構造を持つことができる。一例をcountry_state_viewを基にして説明すると
containerWindowTypeは以下の通りに並ぶ

claim_entry{}
country_states_view{
	state_info_window{}
	state_resources{}
}
provinse_info_window{}
state_building_entry{}
state_shared_building_entry{}
province_building_entry{}
state_resource_entry{}


cotainer内部要素解説


###################GFX########################

gfxは2dの画像を表示するためのファイルで、実際のファイル名(ddsなど)とプログラム内での呼び方を結びつける。
以下のような種類がある。
#spriteTypes
spriteType
textSpriteType
frameAnimatedSpriteType
progressbaartype
cornerdTileSpriteType
(maskedShieldType)

#objectTypes
animatedmaptext

#bitmapfonts
textcolors
bitmapfont
bitmapfont_override


#spriteTypes : spriteType
もっともよく出てくるgfx。
spriteTypes = {
    spriteType = {
        name = "GFX_<name>"
        texturefile = <path>
        noOfFrames = <int>
        effectFile = <path>
        
        allwaystransparent = <bool>
        legacy_lazy_load = <bool>
        
        animation = {
            animationmaskfile = <path>
            animationtexturefile = <path>
            animationrotation = <float>
            animationlooping = <bool>
            animationtime = <float>
            animationdelay = <float>
            animationblendmode = <mode>
            animationtype = <type>
            animationrotationoffset = { 
                x = <float>
                y = <float>
            }
            animationtexturescale = {
                x = <float>
                y = <float>
            }
            animationframes = {
                <int> <int> # etc
            }
        }
    }
}


#######################interfaceお役立ちTips########################

便利な画像がどこにあるか。

ウィンドウ系

diplo_action_~~~系
はいいウィンドウがそろっている。















