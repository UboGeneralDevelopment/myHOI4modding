加筆中
scripted_guiは、guiとgfxと組み合わせることで、自分の好きなGUIを設計して実装することができる。
基本的には、条件が満たされると、GUIのあるボタンの実行が解除され、それを押すと何か効果が発揮される。というものになる。

まず、aiを除く書式から
scripted_gui = {
	<name> = { #このScripted_GUIシステムの名前。
	window_name = <string>
	context_type = <type>
	parent_window_token = <string>
	visible = { <triggers> }
	triggers = {
		<element>_click_enabled = { <triggers> }
		<element>_<modifier>_click_enabled = { <triggers> }
		<element>_visible = { <triggers> }
		<element>_<modifier>_visible = { <triggers> }
	}
	effects = {
		<element>_click = { <effects> }
		<element>_<modifier>_click = { <effects> }
	}
	properties = {
		<element> = {
			image = <string>
			frame = <var>
			x = <var>
			y = <var>
		}
	}
}

GUI要素
#window_name
containerの名前をここで決める。このcontainerの設計はguiファイルにて行う

#context_type
GUIが作用する基本スコープを決める。
player_context, selected_country_context, selected_state_contextの3つがあり、それぞれプレイ国家、選択相手国家、選択ステートとなる。

ROOTは常にplayerであり、selected_countryやselected_stateはFROMとなる。


#parent_window_token
親ウィンドウを決めると親ウィンドウのcontainerに引っ付いてこのcontainerが現れる。
GUIのスクリプトとしては、親containerの中の一番下にこのcontainerが追加される形となる
GUIでの設計する際の位置の基準(0,0)が親ウィンドウになり、重なり順番は親container基準となる。
これを決めない場合のデフォルトではどこにでも現れる。

また、親ウィンドウを自分で作ったものや、ゲーム内の他のインターフェイスにしたければ、そのcontainerのnameを書けばよい。

selected_country_viewとdiplomacy_tab、national_focus、各technology_tabでは
親containerのウィンドウ基準位置がウィンドウトップバーの下にあるので注意。
national_focusとtechnologyを使うときは、moveableに注意。また、national_focusでは他国のnational_focusでも当然見えるので注意

#visible
container全体がどういうときに見えるかを決める。aiが使うためにはaiにも見えている必要がある。
container内部の各elementの配置はguiファイルに依存する。基本的には下に書いてあるほど表面に見える。

#triggers
container内部の<element>それぞれのクリック可能条件、可視化条件を決める
enabledで押せるかどうか、
visibleで見えるかどうかを判別する。
順番としては、
<element>_visible、
<element>_<modifier>_click_enableの順番で書く。
さきにenableを書くと普通に見える。

#effects
<element>をクリックしたときの効果を記述する。
<modifiers>にはクリック方法のバリエーションを書く。right, alt, control, shiftがある。
連続させることで、test_button_shit_right_clickも可能。

ツールチップ
基本的にguiのツールチップはguiファイル側で定義する。
custom_effect_tooltip
effect_tooltip
custom_trigger_tooltip
などは多分使えないので、localisationで頑張って記述してね。
scripted_guiでは[!~~~]で効果のツールチップが取得できるかもしれない？



#properties
guiのelementsのグラフィックを追加で定義する。
通常、guiのelementはguiファイルにおいて直接gfxが設定されており動的に変更されることはない。
しかし、propertiesにおいてはimage＝のあとを動的翻訳キーにして、scripted_localizationに記載することで動的に変更させることができる。

これはMtGで予告済みのMeta_Effectsも同様の機能となっている。



GUIのボタンの位置や画像をいろいろと指定し、ELEMENT名をつける。ELEMENTはここでしか使われないID
それで、ELEMENTをクリックできる条件とその効果を書く。

EVENT_TARGETはつかえない。これが何なのかそもそもあんまり知らない。



AIについてはAIの説明を見ること。